name: Check for Android Studio Updates

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

#
# --- ADD THIS BLOCK ---
# Give the workflow permission to write to the repository
permissions:
  contents: write
#
# --- END OF BLOCK ---
#

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Current Version from Spec
        id: spec
        run: |
          CURRENT_VERSION=$(grep -i '^Version:' android-studio.spec | awk '{print $2}')
          echo "Current spec version: $CURRENT_VERSION"
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Fetch Latest Version from Google
        id: remote
        run: |
          LATEST_VERSION=$(curl -sL https://developer.android.com/studio | \
                           grep -o 'android-studio-[^-]*-linux.tar.gz' | \
                           sed -e 's/android-studio-//' -e 's/-linux.tar.gz//' | \
                           head -n 1)
          
          if [ -z "$LATEST_VERSION" ]; then
            echo "Failed to fetch latest version."
            exit 1
          fi
          
          echo "Latest remote version: $LATEST_VERSION"
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Compare Versions
        id: compare
        run: |
          echo "Comparing versions..."
          if [ "${{ steps.spec.outputs.version }}" == "${{ steps.remote.outputs.version }}" ]; then
            echo "Versions are the same. No update needed."
            echo "update=false" >> $GITHUB_OUTPUT
          else
            echo "New version found! Proceeding with update."
            echo "update=true" >> $GITHUB_OUTPUT
          fi

      - name: Update Spec File and Push
        if: steps.compare.outputs.update == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          OLD_VER="${{ steps.spec.outputs.version }}"
          NEW_VER="${{ steps.remote.outputs.version }}"
          
          echo "Updating spec file from $OLD_VER to $NEW_VER..."
          
          sed -i "s/^Version:.*$OLD_VER/Version:        $NEW_VER/" android-studio.spec
          sed -i "s/^Release:.*$/Release:        1/" android-studio.spec
          
          git add android-studio.spec
          git commit -m "Automated version bump to $NEW_VER"
          git push
          echo "Pushed updated spec file to repository."
