name: Update Android Studio Spec File

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    # Runs at 4:00 AM UTC every day
    - cron: '0 4 * * *'

jobs:
  update-spec-file:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for pushing changes to the repository
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Use GITHUB_TOKEN for authentication

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq # Install jq for JSON parsing if needed

      - name: Update spec file and commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SPEC_FILE="android-studio.spec"
          
          echo "Fetching the latest Android Studio version..."

          # Attempt to fetch version using multiple methods
          LATEST_VERSION=""
          
          # Method 1: Scrape version from the main page header
          LATEST_VERSION=$(curl -s --retry 3 --retry-delay 5 https://developer.android.com/studio | grep -oP '(?<=<h2 class="devsite-page-header">Android Studio )\d{4}\.\d+\.\d+' | head -1)

          # Method 2: Fallback to data-version attribute
          if [ -z "$LATEST_VERSION" ]; then
            echo "Method 1 failed. Trying fallback (data-version attribute)..."
            LATEST_VERSION=$(curl -s --retry 3 --retry-delay 5 https://developer.android.com/studio | grep -oP 'data-version="\K[0-9]{4}\.[0-9]+\.[0-9]+' | sort -V | tail -n1)
          fi

          # Method 3: Fallback to release notes or API if available
          if [ -z "$LATEST_VERSION" ]; then
            echo "Method 2 failed. Trying release notes page..."
            LATEST_VERSION=$(curl -s --retry 3 --retry-delay 5 https://developer.android.com/studio/releases | grep -oP 'Android Studio \d{4}\.\d+\.\d+' | head -1 | grep -oP '\d{4}\.\d+\.\d+')
          fi

          if [ -z "$LATEST_VERSION" ]; then
            echo "ERROR: Failed to fetch the latest version from all sources."
            exit 1
          fi

          echo "Latest available version: $LATEST_VERSION"

          # Validate version format (e.g., YYYY.M.N or YYYY.M.N.P)
          if ! echo "$LATEST_VERSION" | grep -qE '^[0-9]{4}\.[0-9]+\.[0-9]+$'; then
            echo "ERROR: Invalid version format: $LATEST_VERSION"
            exit 1
          fi

          # Get current version from spec file
          CURRENT_VERSION=$(grep -i "^Version:" "$SPEC_FILE" | awk '{print $2}' | tr -d '[:space:]')
          echo "Current spec file version: $CURRENT_VERSION"

          # Compare versions
          if [ "$LATEST_VERSION" = "$CURRENT_VERSION" ]; then
            echo "Version is already up to date."
            exit 0
          fi

          echo "New version found. Updating spec file..."
          sed -i "s/^Version:.*/Version:        $LATEST_VERSION/" "$SPEC_FILE"

          # Verify the update
          UPDATED_VERSION=$(grep -i "^Version:" "$SPEC_FILE" | awk '{print $2}' | tr -d '[:space:]')
          if [ "$UPDATED_VERSION" != "$LATEST_VERSION" ]; then
            echo "ERROR: Failed to update spec file correctly."
            exit 1
          fi

          # Configure git
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'

          # Commit and push changes
          if ! git diff --quiet "$SPEC_FILE"; then
            echo "Committing and pushing changes..."
            git add "$SPEC_FILE"
            git commit -m "chore(version): Bump Android Studio to $LATEST_VERSION"
            git push
          else
            echo "WARNING: No changes detected in spec file despite version difference."
            exit 1
          fi
