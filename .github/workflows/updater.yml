name: Update Android Studio Spec File

# This workflow will run manually, on a schedule, or when you push to the 'main' branch
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    # Runs at 4:00 AM UTC every day
    - cron: '0 4 * * *'

jobs:
  update-spec-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update spec file and commit changes
        run: |
          SPEC_FILE="android-studio.spec"
          
          # Get latest version from the website's HTML with fallbacks
          LATEST_VERSION=$(curl -s https://developer.android.com/studio | grep -oP '(?<=<h2 class="devsite-page-header">Android Studio )\d{4}\.\d+\.\d+' | head -1)
          if [ -z "$LATEST_VERSION" ]; then
            LATEST_VERSION=$(curl -s https://developer.android.com/studio | grep -oP 'data-version="\K[0-9]{4}\.[0-9]+\.[0-9]+\.[0-9]+' | sort -V | tail -n1)
          fi

          if [ -z "$LATEST_VERSION" ]; then
            echo "Failed to fetch the latest version. Exiting."
            exit 1
          fi

          echo "Latest available version is: $LATEST_VERSION"

          # Get the version currently in the spec file
          CURRENT_VERSION=$(grep -i "^Version:" $SPEC_FILE | awk '{print $2}')
          echo "Current spec file version is: $CURRENT_VERSION"

          # Compare versions and exit if they are the same
          if [ "$LATEST_VERSION" == "$CURRENT_VERSION" ]; then
            echo "Version is already up to date."
            exit 0
          fi

          echo "New version found. Updating spec file..."
          
          # Update the version in the spec file
          sed -i "s/^Version:.*/Version:        $LATEST_VERSION/" $SPEC_FILE

          # Configure git
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'

          # Commit and push the changes if the file was modified
          if ! git diff --quiet $SPEC_FILE; then
            echo "Committing and pushing changes..."
            git add $SPEC_FILE
            git commit -m "chore(version): Bump Android Studio to $LATEST_VERSION"
            git push
          else
            echo "No changes to commit, despite version difference. Check script."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
